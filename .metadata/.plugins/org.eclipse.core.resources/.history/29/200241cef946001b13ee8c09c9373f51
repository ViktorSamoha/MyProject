import java.util.Scanner;
import java.util.ArrayList;

public class Program {

	public static void main(String[] args) {
		Start startProgramm = new Start();
		startProgramm.startMenu();
		
	}
}
class Start{
	ArrayList<String> users = new ArrayList<String>();
	void startMenu() {
		int start_menu;
		System.out.printf("1-Вход\n2-Регистрация\n");
		Scanner sc = new Scanner(System.in);
		System.out.printf("Выберите пункт меню: ");
		start_menu = sc.nextInt();
		switch(start_menu){
			case 1:
				boolean entr = enter();
				if(entr) {
					ChooseMenu cMenu = new ChooseMenu();
					cMenu.chooseMenu();
				}else {
					System.out.println("Зарегистрироваться?");
					startMenu();
				}
				break;
			case 2:
				//registration();
				ChooseMenu cMenu = new ChooseMenu(registration());
				cMenu.chooseMenu();
				break;
		}
	}
	boolean enter() {
		String login, password;
		Scanner sc = new Scanner(System.in);
		System.out.printf("Введите лоин: \n");
		login = sc.nextLine();
		System.out.printf("Введите пароль: \n");
		password = sc.nextLine();
		if(this.users.contains(login)){
			if(this.users.contains(password)){
				return true;
	        }else {System.out.printf("Вы ввели неправильный пароль!\n");return false;}
        }else {System.out.printf("Вы ввели неправильный логин!\n");return false;}
    }
	Person registration() {
		String login, password, name, secondname, patronumic, city, street, building, phone;
		int entrance, floor, flat;
		Scanner sc = new Scanner(System.in);
		System.out.printf("Придумайте лоин: \n");
		login = sc.nextLine();
		this.users.add(login);
		System.out.printf("Придумайте пароль: \n");
		password = sc.nextLine();
		this.users.add(password);
		System.out.printf("Введите Имя: \n");
		name = sc.nextLine();
		System.out.printf("Введите Фамилию: \n");
		secondname = sc.nextLine();
		System.out.printf("Введите Отчество: \n");
		patronumic = sc.nextLine();
		System.out.printf("Введите номер телефона: \n");
		phone = sc.nextLine();
		System.out.printf("Введите название города: \n");
		city = sc.nextLine();
		System.out.printf("Введите название улицы: \n");
		street = sc.nextLine();
		System.out.printf("Введите номер дома: \n");
		building = sc.nextLine();
		System.out.printf("Введите номер парадной: \n");
		entrance = sc.nextInt();
		System.out.printf("Введите этаж: \n");
		floor = sc.nextInt();
		System.out.printf("Введите номер квартиры: \n");
		flat = sc.nextInt();
		Adress newUserAdress = new Adress(city, street, building, entrance, floor, flat);
		Person newUser = new Person(login, password, name, secondname, patronumic, phone, newUserAdress);
		newUser.displayInfo();
		//System.out.printf("\n");
		return newUser;
	}
}
class ChooseMenu{
	Person user;
	ChooseMenu(){};
	ChooseMenu(Person user){
		this.user = user;
	};
	void chooseMenu() {
		int c_menu;
		System.out.printf("1-Личный кабинет\n2-Основное меню\n");
		Scanner sc = new Scanner(System.in);
		System.out.println("Выберите пункт меню: ");
		c_menu = sc.nextInt();
		switch(c_menu){
			case 1:
				UserMenu uMenu = new UserMenu(this.user);
				uMenu.showMenu();
				break;
			case 2:
				MainMenu uMainMenu = new MainMenu(this.user);
				uMainMenu.showMenu();
				break;
		}
	}
}
class MainMenu{
	Person user;
	Store store;
	Product product;
	MainMenu(){
		this.store = new Store();
		this.product = new Product();
	}
	MainMenu(Person user){
		this.user = user;
	}
	void showMenu() {
		int main_menu;
		System.out.printf("1-Акции\n2-Магазины\n3-Рестораны\n4-Блюда\n5-Выход\n");
		Scanner sc = new Scanner(System.in);
		System.out.println("Выберите пункт меню: ");
		main_menu = sc.nextInt();
		switch(main_menu){
			case 1:
				viewStocks();
				showMenu();
				break;
			case 2:
				viewShops();
				showMenu();
				break;
			case 3:
				viewRestaurants();
				showMenu();
				break;
			case 4:
				viewFood();
				showMenu();
				break;
			case 5:
				exit();
				break;
		}
	}
	void viewStocks() {
		ArrayList<String> stocksList = new ArrayList<String>();
		stocksList.add("Скидка на бургер!");
        for(String stock : stocksList){
            System.out.println(stock);
        }
        int stocks_menu;
		System.out.printf("1-Открыть ресторан\n2-Открыть товар\n3-Выход\n");
		Scanner sc = new Scanner(System.in);
		System.out.println("Выберите пункт меню: ");
		stocks_menu = sc.nextInt();
		switch(stocks_menu) {
			case 1:viewRestaurants();
				break;
			case 2:viewFood();
				break;
			case 3:showMenu();
				break;
		}
	}
	void viewShops() {
		ArrayList<String> shopsList = new ArrayList<String>();
		shopsList.add("Пятерочка");
        for(String shop : shopsList){
            System.out.println(shop);
        }
	}
	void viewRestaurants() {
        System.out.println(store.name);
        int restaurants_menu;
		System.out.printf("1-Открыть товар\n2-Выход\n");
		Scanner sc = new Scanner(System.in);
		System.out.println("Выберите пункт меню: ");
		restaurants_menu = sc.nextInt();
		switch(restaurants_menu) {
			case 1:
				viewFood();
				break;
			case 2:
				showMenu();
				break;
		}
	}
	void viewFood() {
        System.out.println(product.name);
        int food_menu;
		System.out.printf("1-Заказать\n2-Выход\n");
		Scanner sc = new Scanner(System.in);
		System.out.println("Выберите пункт меню: ");
		food_menu = sc.nextInt();
		switch(food_menu) {
			case 1:
				Product burger = new Product();
				burger.Buy(user, product.price, store.name);
				break;
			case 2:
				showMenu();
				break;
		}
	}
	void exit() {
		ChooseMenu cMenu = new ChooseMenu(this.user);
		cMenu.chooseMenu();
	}
}
class UserMenu{
	Person user;
	UserMenu(){}
	UserMenu(Person user){
		this.user = user;
	}
	void showMenu() {
		int user_menu;
		System.out.printf("1-Личные данные\n2-Адреса доставки\n3-Мои заказы\n4-Мои скидки\n5-Выход\n");
		Scanner sc = new Scanner(System.in);
		System.out.println("Выберите пункт меню: ");
		user_menu = sc.nextInt();
		switch(user_menu){
			case 1:
				editUser();
				break;
			case 2:
				editAdress();
				break;
			case 3:
				viewOrders();
				break;
			case 4:
				viewDiscounts();
				break;
			case 5:
				exit(this.user);
				break;
		}
	}
	void editUser() {
		user.editInfo();
	}
	void editAdress() {
		user.adress.editInfo(user);
	}
	void viewOrders() {}
	void viewDiscounts() {}
	void exit(Person user) {
		ChooseMenu cMenu = new ChooseMenu(user);
		cMenu.chooseMenu();
	}
}
class Stocks{
	
}
class Store{
	String name;
	Store(){
		this.name = "Бургерная";
	}
}
class Product{
	String name;
	boolean stock;
	int price;
	Store store;
	Product(){
		this.name = "Бургер";
		this.price = 250;
		this.stock = true;
	}
	void Buy(Person user, int price, String name) {
		user.orders.adress = user.adress;
		user.orders.price = price;
		user.orders.store = name;
	}
}
class Orders{
	String store;
	Adress adress;
	int price;
	Orders(){}
	Orders(String store, Adress dress, int price){
		this.store = store;
		this.adress = adress;
		this.price = price;
	}
	
}
class Person{
	String login, password;
	String name, secondname, patronumic;
	String phone;
	Adress adress;
	Orders orders;
	Person(){
		name = "Name";
		secondname= "Secondname";
		patronumic = "Patronumic";
		adress = new Adress();
	}
	Person(String login, String password, String name, String secondname, String patronumic, String phone, Adress adress){
		this.login = login;
		this.password = password;
		this.name = name;
		this.secondname = secondname;
		this.patronumic = patronumic;
		this.phone = phone;
		this.adress = adress;
	}
	void displayInfo() {
		System.out.printf("Имя: %s\nФамилия: %s\nОтчество: %s\nТелефон: %s",name, secondname, patronumic, phone);
		System.out.printf("\n");
		this.adress.displayInfo();
	}
	void editInfo() {
		int ei_menu;
		System.out.printf("1-Изменить имя\n2-Изменить фамилию\n3-Изменить отчество\n4-Изменить телефон\n5-Выход\n");
		Scanner sc = new Scanner(System.in);
		ei_menu = sc.nextInt();
		switch(ei_menu) {
			case 1:
				editName();
				editInfo();
				break;
			case 2:
				editSecondName();
				editInfo();
				break;
			case 3:
				editPatronumic();
				editInfo();
				break;
			case 4:
				editPhone();
				editInfo();
				break;
			case 5:
				exit();
				break;
		}
	}
	void editName() {
		Scanner sc = new Scanner(System.in);
		System.out.printf("Введите новое Имя\n");
		this.name = sc.nextLine();
	}
	void editSecondName() {
		Scanner sc = new Scanner(System.in);
		System.out.printf("Введите новую Фамилию\n");
		this.secondname = sc.nextLine();
	}
	void editPatronumic() {
		Scanner sc = new Scanner(System.in);
		System.out.printf("Введите новое Отчество\n");
		this.patronumic = sc.nextLine();
	}
	void editPhone() {
		Scanner sc = new Scanner(System.in);
		System.out.printf("Введите новый телефон\n");
		this.phone = sc.nextLine();
	}
	void exit() {
		UserMenu uMenu = new UserMenu(getPerson());
		uMenu.showMenu();
	}
	Person getPerson() {
		Person user = new Person(this.login, this.password,this.name, this.secondname, this.patronumic, this.phone, this.adress);
		return user;
	}
	void newOrder() {
		
	}
}
class Adress{
	String city, street, building;
	int entrance, floor, flat;
	Adress(){
		city = "city";
		street = "street";
		building = "building";
	}
	Adress(String city, String street, String building, int entrance, int floor, int flat){
		this.city = city;
		this.street = street;
		this.building = building;
		this.entrance = entrance;
		this.floor = floor;
		this.flat = flat;
	}
	void displayInfo() {
		System.out.printf("Город: %s\nУлица: %s\nДом: %s\nПарадная: %s\nЭтаж: %s\nКвартира: %s",city, street, building,entrance, floor, flat);
	}
	void editInfo(Person user) {
		Person localUser = user;
		int ei_menu;
		System.out.printf("1-Изменить город\n2-Изменить улицу\n3-Изменить номер дома\n4-Изменить парадную\n5-Изменить этаж\n6-Изменить квартиру\n7-Выход\n");
		Scanner sc = new Scanner(System.in);
		ei_menu = sc.nextInt();
		switch(ei_menu) {
			case 1:
				editCity() ;
				editInfo(localUser);
				break;
			case 2:
				editStreet();
				editInfo(localUser);
				break;
			case 3:
				editBuilding();
				editInfo(localUser);
				break;
			case 4:
				editEntrance();
				editInfo(localUser);
				break;
			case 5:
				editFloor();
				editInfo(localUser);
				break;
			case 6:
				editFlat();
				editInfo(localUser);
				break;
			case 7:
				exit(localUser);
				break;
		}
	}
	void editCity() {
		Scanner sc = new Scanner(System.in);
		System.out.printf("Введите новый город\n");
		this.city = sc.nextLine();
	}
	void editStreet() {
		Scanner sc = new Scanner(System.in);
		System.out.printf("Введите новую улицу\n");
		this.street = sc.nextLine();
	}
	void editBuilding() {
		Scanner sc = new Scanner(System.in);
		System.out.printf("Введите дом\n");
		this.building = sc.nextLine();
	}
	void editEntrance() {
		Scanner sc = new Scanner(System.in);
		System.out.printf("Введите новую парадную\n");
		this.entrance = sc.nextInt();
	}
	void editFloor() {
		Scanner sc = new Scanner(System.in);
		System.out.printf("Введите новый этаж\n");
		this.floor = sc.nextInt();
	}
	void editFlat() {
		Scanner sc = new Scanner(System.in);
		System.out.printf("Введите новую квартиру\n");
		this.flat = sc.nextInt();
	}
	void exit(Person user) {
		UserMenu uMenu = new UserMenu(user);
		uMenu.showMenu();
	}
	
}